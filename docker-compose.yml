services:
  # 数据库服务
  db:
    image: mysql:8.0
    container_name: market-pulse-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_NAME:-market_pulse_db}
      MYSQL_USER: ${DB_USER:-market_pulse_user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-wBYXZkiLTExiEAHF}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-rootpassword}
    ports:
      # 为了方便从外部（如 MySQL Workbench）连接调试，将容器的 3306 端口映射到主机的 3307 端口
      # 注意：我们使用 3307 是为了避免与你本地可能正在运行的 MySQL 实例（通常在 3306）冲突
      - "3307:3306"
    volumes:
      # 将数据库文件持久化到本地，防止容器删除后数据丢失
      - mysql-data:/var/lib/mysql
    networks:
      - market-pulse-network

  # 后端服务
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: market-pulse-backend
    restart: unless-stopped
    depends_on:
      - db
    environment:
      DB_HOST: db
      DB_PORT: 3306
      DB_USER: ${DB_USER:-market_pulse_user}
      DB_PASSWORD: ${DB_PASSWORD:-wBYXZkiLTExiEAHF}
      DB_NAME: ${DB_NAME:-market_pulse_db}
      SERVER_PORT: 8080
    ports:
      - "8080:8080"  # 映射到主机端口，让nginx可以访问
    networks:
      - market-pulse-network

  # 前端服务 (现在由nginx直接服务静态文件，不需要容器)
  # frontend:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: market-pulse-frontend
  #   restart: unless-stopped
  #   depends_on:
  #     - backend
  #   ports:
  #     - "80:80"  # 端口被nginx使用
  #   networks:
  #     - market-pulse-network

# 定义数据卷
volumes:
  mysql-data:
    driver: local 

# 定义网络
networks:
  market-pulse-network:
    driver: bridge 