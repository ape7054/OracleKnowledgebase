name: Deploy Frontend with Docker

on:
  push:
    branches: [ master, main ]
    paths:
      - 'src/**'
      - 'public/**'
      - 'nginx/**'
      - 'index.html'
      - 'vite.config.js'
      - 'package*.json'
      - 'Dockerfile'
      - '.github/workflows/deploy-frontend.yml'
      - 'docker-compose.yml'

env:
  # Set the image name, using your GitHub username for the namespace
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/market-pulse-frontend

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.PAT }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          # The Dockerfile for the frontend is in the root directory
          dockerfile: ./Dockerfile
          push: true
          tags: ${{ env.IMAGE_NAME }}:latest

  deploy:
    name: Deploy to Server
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Copy docker-compose file to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: "docker-compose.yml"
          target: "/www/wwwroot/market-pulse"

      - name: Deploy and Restart Service
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            # Navigate to the project directory
            cd /www/wwwroot/market-pulse

            # Log in to the GitHub Container Registry
            echo ${{ secrets.PAT }} | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin

            # Pull the latest frontend image
            docker-compose pull frontend

            # Restart only the frontend service
            docker-compose up -d --no-deps frontend

            # Optional: Clean up old, unused Docker images
            docker image prune -f